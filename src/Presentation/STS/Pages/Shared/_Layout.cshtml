@using AspNetCoreSpa.Application.Abstractions
@inject IClientInfoService ClientInfoService
@{
    var client = ClientInfoService.GetClient();
    var appTitle = client.ClientName ?? "AspNetCoreSTS";
    var returnLink = client.ClientUri ?? "/"; // await Component.InvokeAsync("ReturnLink");
    var pageTitle = ViewData["Title"]?.ToString();
    //var query = ViewContext.HttpContext.Request.Query;
    //string returnUrl = null;
    //if (query.ContainsKey("returnUrl"))
    //{
    //    returnUrl = query["returnUrl"];
    //}
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        <if hide="string.IsNullOrEmpty(appTitle)">
            @appTitle <if hide="string.IsNullOrEmpty(pageTitle)">- @pageTitle</if>
        </if>
    </title>

    <partial name="_AppStyles" />

</head>
<body>

    @await Html.PartialAsync("_Header", new { ReturnUrl = returnLink, AppTitle = appTitle })

    <div class="container">
        <partial name="_CookieConsentPartial" optional />

        <main role="main">
            <if hide="string.IsNullOrEmpty(pageTitle)">
                <div class="row">
                    <div class="col">
                        <h1>
                            @pageTitle
                        </h1>
                    </div>
                </div>
            </if>
            @RenderBody()
        </main>
    </div>

    <partial name="_Footer" />

    <partial name="_AppScripts" />

    @RenderSection("Scripts", required: false)

</body>
</html>